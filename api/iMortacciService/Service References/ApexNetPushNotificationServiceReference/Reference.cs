//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iMortacci.ApexNetPushNotificationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.progamma.com", ConfigurationName="ApexNetPushNotificationServiceReference.NotificatoreSoap")]
    public interface NotificatoreSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_DOExecute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        object ID_DOExecute(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc, ref string RetDocXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_ReceiveFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string ID_ReceiveFile([System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] FileData, string Extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_SendFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        byte[] ID_SendFile(string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/SendNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string SendNotification(string pAuthKey, string pApplicationKey, string pMessage, string pUserName, string pSound, int pBadge);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NotificatoreSoapChannel : iMortacci.ApexNetPushNotificationServiceReference.NotificatoreSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificatoreSoapClient : System.ServiceModel.ClientBase<iMortacci.ApexNetPushNotificationServiceReference.NotificatoreSoap>, iMortacci.ApexNetPushNotificationServiceReference.NotificatoreSoap {
        
        public NotificatoreSoapClient() {
        }
        
        public NotificatoreSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificatoreSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificatoreSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificatoreSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object ID_DOExecute(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc, ref string RetDocXML) {
            return base.Channel.ID_DOExecute(DOXML, MethodName, ClassName, Params, RetDoc, ref RetDocXML);
        }
        
        public string ID_ReceiveFile(byte[] FileData, string Extension) {
            return base.Channel.ID_ReceiveFile(FileData, Extension);
        }
        
        public byte[] ID_SendFile(string FileName) {
            return base.Channel.ID_SendFile(FileName);
        }
        
        public string SendNotification(string pAuthKey, string pApplicationKey, string pMessage, string pUserName, string pSound, int pBadge) {
            return base.Channel.SendNotification(pAuthKey, pApplicationKey, pMessage, pUserName, pSound, pBadge);
        }
    }
}
